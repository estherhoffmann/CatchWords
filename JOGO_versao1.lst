Microsoft (R) Macro Assembler Version 12.00.21005.1	    12/01/18 19:05:34
JOGO_versao1.asm					     Page 1 - 1


				INCLUDE ../Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				INCLUDE ../Macros.inc
			      C .NOLIST
			      C .LIST
			      C 
				
				
				
				;// Data -> declaration of variables
 00000000			.data
 00000000 C9			    NextLevel BYTE 201, 78 DUP(205), 187
	   0000004E [
	    CD
	   ] BB
 00000050  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000000A0  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000000F0  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000140  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000190  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000001E0  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000230  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000280  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000002D0  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000320  BA 20 20 20 20	      BYTE 186, "                                 - LEVEL 1 -                                  ", 186 ;//11 - 41
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 2D
	   20 4C 45 56 45
	   4C 20 31 20 2D
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000370  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000003C0  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000410  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000460  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000004B0  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000500  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000550  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000005A0  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000005F0  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000640  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000690  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000006E0  C8			      BYTE 200, 78 DUP(205), 188, 0
	   0000004E [
	    CD
	   ] BC 00
 00000731 C9			    FailSpecial BYTE 201, 78 DUP(205), 187
	   0000004E [
	    CD
	   ] BB
 00000781  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000007D1  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000821  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000871  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000008C1  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000911  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000961  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000009B1  BA 20 20 20 20	      BYTE 186, "                                 YOU FAILED !                                 ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 59
	   4F 55 20 46 41
	   49 4C 45 44 20
	   21 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000A01  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000A51  BA 20 20 20 20	      BYTE 186, "                        BUT THAT'S OKAY, IT WAS JUST A                        ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   42 55 54 20 54
	   48 41 54 27 53
	   20 4F 4B 41 59
	   2C 20 49 54 20
	   57 41 53 20 4A
	   55 53 54 20 41
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000AA1  BA 20 20 20 20	      BYTE 186, "                                 SPECIAL WORD                                 ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 53
	   50 45 43 49 41
	   4C 20 57 4F 52
	   44 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000AF1  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000B41  BA 20 20 20 20	      BYTE 186, "                                - KEEP GOING -                                ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 2D 20
	   4B 45 45 50 20
	   47 4F 49 4E 47
	   20 2D 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000B91  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000BE1  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000C31  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000C81  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000CD1  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000D21  BA 20 20 20 20	      BYTE 186, "                               OH, IT WAS                                     ", 186;//20 - 42
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 4F 48 2C
	   20 49 54 20 57
	   41 53 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000D71  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000DC1  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000E11  C8			      BYTE 200, 78 DUP(205), 188, 0
	   0000004E [
	    CD
	   ] BC 00
 00000E62 C9			    Fail BYTE 201, 78 DUP(205), 187
	   0000004E [
	    CD
	   ] BB
 00000EB2  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000F02  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000F52  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000FA2  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00000FF2  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001042  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001092  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000010E2  BA 20 20 20 20	      BYTE 186, "                            IT WASN'T THIS TIME D:                            ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 49
	   54 20 57 41 53
	   4E 27 54 20 54
	   48 49 53 20 54
	   49 4D 45 20 44
	   3A 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001132  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001182  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000011D2  BA 20 20 20 20	      BYTE 186, "                                  SCORE:                                      ", 186;//12 - 42
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   53 43 4F 52 45
	   3A 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001222  BA 20 20 20 20	      BYTE 186, "                            YOU FAILED ON LEVEL                               ", 186;//13 - 49
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 59
	   4F 55 20 46 41
	   49 4C 45 44 20
	   4F 4E 20 4C 45
	   56 45 4C 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001272  BA 20 20 20 20	      BYTE 186, "                             THE WORD WAS:                                    ", 186;//14 - 44
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   54 48 45 20 57
	   4F 52 44 20 57
	   41 53 3A 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000012C2  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001312  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001362  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000013B2  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001402  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001452  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000014A2  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000014F2  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001542  C8			      BYTE 200, 78 DUP(205), 188, 0
	   0000004E [
	    CD
	   ] BC 00
 00001593 C9			    Correct BYTE 201, 78 DUP(205), 187
	   0000004E [
	    CD
	   ] BB
 000015E3  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001633  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001683  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000016D3  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001723  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001773  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000017C3  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001813  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001863  BA 20 20 20 20	      BYTE 186, "                                  CORRECT !                                   ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   43 4F 52 52 45
	   43 54 20 21 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000018B3  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001903  BA 20 20 20 20	      BYTE 186, "                            - NEXT WORD COMING -                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 2D
	   20 4E 45 58 54
	   20 57 4F 52 44
	   20 43 4F 4D 49
	   4E 47 20 2D 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001953  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000019A3  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000019F3  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001A43  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001A93  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001AE3  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001B33  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001B83  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001BD3  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001C23  BA 20 20 20 20	      BYTE 186, "                                                                              ", 186
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 00001C73  C8			      BYTE 200, 78 DUP(205), 188, 0
	   0000004E [
	    CD
	   ] BC 00
 00001CC4 C9			    ScreenGame BYTE 201, 9 DUP(205), 203, 58 DUP(205), 203, 9 DUP(205), 187                                         ;//1
	   00000009 [
	    CD
	   ] CB
	   0000003A [
	    CD
	   ] CB
	   00000009 [
	    CD
	   ] BB
 00001D14  BA 20 20 20 20	      BYTE 186, "         ", 186,"                                                          ", 186,"         ", 186 ;//2
	   20 20 20 20 20
	   BA 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
	   20 20 20 20 20
	   20 20 20 20 BA
 00001D64  BA 20 20 20 20	      BYTE 186, "         ", 186,"                                                          ", 186,"         ", 186 ;//3
	   20 20 20 20 20
	   BA 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
	   20 20 20 20 20
	   20 20 20 20 BA
 00001DB4  BA 20 20 20 20	      BYTE 186, "         ", 186,"                                                          ", 186,"    Y    ", 186 ;//4
	   20 20 20 20 20
	   BA 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
	   20 20 20 20 59
	   20 20 20 20 BA
 00001E04  BA 20 20 20 20	      BYTE 186, "    D    ", 186,"                                                          ", 186,"    O    ", 186 ;//5
	   44 20 20 20 20
	   BA 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
	   20 20 20 20 4F
	   20 20 20 20 BA
 00001E54  BA 20 20 20 20	      BYTE 186, "    O    ", 186,"                                                          ", 186,"    U    ", 186 ;//6
	   4F 20 20 20 20
	   BA 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
	   20 20 20 20 55
	   20 20 20 20 BA
 00001EA4  BA 20 20 20 20	      BYTE 186, "    N'   ", 186,"                                                          ", 186,"         ", 186 ;//7
	   4E 27 20 20 20
	   BA 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
	   20 20 20 20 20
	   20 20 20 20 BA
 00001EF4  BA 20 20 20 20	      BYTE 186, "    T    ", 186,"                                                          ", 186,"    C    ", 186 ;//8
	   54 20 20 20 20
	   BA 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
	   20 20 20 20 43
	   20 20 20 20 BA
 00001F44  BA 20 20 20 20	      BYTE 186, "         ", 186,"                                                          ", 186,"    A    ", 186 ;//9
	   20 20 20 20 20
	   BA 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
	   20 20 20 20 41
	   20 20 20 20 BA
 00001F94  BA 20 20 20 20	      BYTE 186, "    G    ", 186,"                                                          ", 186,"    N    ", 186 ;//10
	   47 20 20 20 20
	   BA 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
	   20 20 20 20 4E
	   20 20 20 20 BA
 00001FE4  BA 20 20 20 20	      BYTE 186, "    I    ", 186,"                                                          ", 186,"         ", 186 ;//11
	   49 20 20 20 20
	   BA 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
	   20 20 20 20 20
	   20 20 20 20 BA
 00002034  BA 20 20 20 20	      BYTE 186, "    V    ", 186,"                                                          ", 186,"    D    ", 186 ;//12
	   56 20 20 20 20
	   BA 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
	   20 20 20 20 44
	   20 20 20 20 BA
 00002084  BA 20 20 20 20	      BYTE 186, "    E    ", 186,"                                                          ", 186,"    O    ", 186 ;//13
	   45 20 20 20 20
	   BA 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
	   20 20 20 20 4F
	   20 20 20 20 BA
 000020D4  BA 20 20 20 20	      BYTE 186, "         ", 186,"                                                          ", 186,"         ", 186 ;//14
	   20 20 20 20 20
	   BA 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
	   20 20 20 20 20
	   20 20 20 20 BA
 00002124  BA 20 20 20 20	      BYTE 186, "    P    ", 186,"                                                          ", 186,"    H    ", 186 ;//15
	   50 20 20 20 20
	   BA 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
	   20 20 20 20 48
	   20 20 20 20 BA
 00002174  BA 20 20 20 20	      BYTE 186, "    U    ", 186,"                                                          ", 186,"    T    ", 186 ;//16
	   55 20 20 20 20
	   BA 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
	   20 20 20 20 54
	   20 20 20 20 BA
 000021C4  BA 20 20 20 20	      BYTE 186, "    !    ", 186,"                                                          ", 186,"    I    ", 186 ;//17
	   21 20 20 20 20
	   BA 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
	   20 20 20 20 49
	   20 20 20 20 BA
 00002214  BA 20 20 20 20	      BYTE 186, "         ", 186,"                                                          ", 186,"    S    ", 186 ;//18
	   20 20 20 20 20
	   BA 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
	   20 20 20 20 53
	   20 20 20 20 BA
 00002264  BA 20 20 20 20	      BYTE 186, "         ", 186,"                                                          ", 186,"         ", 186 ;//19
	   20 20 20 20 20
	   BA 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
	   20 20 20 20 20
	   20 20 20 20 BA
 000022B4  BA 20 20 20 20	      BYTE 186, "         ", 186,"                                                          ", 186,"         ", 186 ;//20
	   20 20 20 20 20
	   BA 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
	   20 20 20 20 20
	   20 20 20 20 BA
 00002304  CC			      BYTE 204, 9 DUP(205), 202, 58 DUP(205), 202, 9 DUP(205), 185                                                  ;//21
	   00000009 [
	    CD
	   ] CA
	   0000003A [
	    CD
	   ] CA
	   00000009 [
	    CD
	   ] B9
 00002354  BA 20 20 20 20	      BYTE 186, "                               [  CATCH WORDS  ]                              ", 186               ;//22
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 5B 20 20
	   43 41 54 43 48
	   20 57 4F 52 44
	   53 20 20 5D 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000023A4  BA 20 20 20 20	      BYTE 186, "        SCORE:                      LEVEL:                  WORD:             ", 186               ;//23 - 17;45;68
	   20 20 20 20 53
	   43 4F 52 45 3A
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 4C 45 56
	   45 4C 3A 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 57 4F 52 44
	   3A 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 BA
 000023F4  C8			      BYTE 200, 78 DUP(205), 188, 0                                                                                 ;//24
	   0000004E [
	    CD
	   ] BC 00
				  ;// Variables for file manipulation
 00002445 57 6F 72 64 73	    fileLevel1 BYTE "WordsLevel1.txt",0
	   4C 65 76 65 6C
	   31 2E 74 78 74
	   00
 00002455 57 6F 72 64 73	    fileLevel2 BYTE "WordsLevel2.txt",0
	   4C 65 76 65 6C
	   32 2E 74 78 74
	   00
 00002465 57 6F 72 64 73	    fileLevel3 BYTE "WordsLevel3.txt",0
	   4C 65 76 65 6C
	   33 2E 74 78 74
	   00
 00002475  0000000F [		    fileName BYTE 15 DUP(?),0
	    00
	   ] 00
 00002485 00000000		    fileHandle HANDLE ?
 00002489 00000000		    BytesToRead DWORD ?
 = 00000008			    BUFSIZE = 8               ;//tamanho do buffer? nao sei direito na real
 0000248D  00000008 [		    buffer BYTE BUFSIZE DUP(?)
	    00
	   ]
 00002495 00000000    bytesRead DWORD ?         ;//Will store how many bytes you actually read
				
				
				  ;//Variables to pick the random words from .txt files
 00002499 00000000		    SizeLevel DWORD ?         ;//Size of word + enter
 0000249D 00000000		    SizeWord DWORD ?
 000024A1  0000000A [		    RandNum SDWORD 10 dup (?) ;//vai ter o num rand e ser reutilizada em cada nível
	    00000000
	   ]
 000024C9 00000000		    Level DWORD 0             ;//vai começar com ? e no codigo vc define
 000024CD 00000000		    SizeOfFile DWORD ?        ;//number os bytes until last word in the .txt files
 000024D1 00000000		    WordPosition DWORD ?      ;//Posição da palavra no vetor RandNum?
				
 000024D5  00000007 [		    RandWord BYTE 7 dup (?), 0           ;//Word gerada a cada rodada
	    00
	   ] 00
 000024DD  00000007 [		    RandomPosition BYTE 7 dup (?), 0     ;//Positions of letters on screen
	    00
	   ] 00
 000024E5 15			    ScreenLimit BYTE 21
 000024E6 00			    InputPlayer BYTE 0
 000024E7  00000005 [		    InputString BYTE 5 dup (32), 0
	    20
	   ] 00
 000024ED 00			    LetterPlayer BYTE 0
 000024EE 00			    StatusWord BYTE 0         ;//stores the status of falling word: 0 - not finished; 1- finished!; 2 - game over;
				
 000024EF 00			    Score BYTE 0
 000024F0 00			    SpecialWord BYTE 0        ;//To indicate if it is the special word -> 0: it is not;  1: is it
 000024F1 00			    NumOfWords BYTE 0         ;//Number of Words in a Level
 000024F2 00			    CurrentNum BYTE 0         ;//Current Word [0 -> NumOfWords]
				
				
				;//The code itself
 00000000			.code
				
				
 00000000			ClearForNewWord PROC
 00000000  51			    push ECX
 00000001  56			    push ESI
 00000002  C6 05 000024ED R	    mov LetterPlayer, 0
	   00
 00000009  C6 05 000024EE R	    mov StatusWord, 0
	   00
				
 00000010  BE 00000000		    mov ESI, 0
 00000015  B9 00000006		    mov ECX, SIZEOF InputString
 0000001A  49			    dec ECX
 0000001B			ClearBuffer:
 0000001B  C6 86 000024E7 R	    mov InputString[ESI], 32
	   20
 00000022  46			    inc ESI
 00000023  E2 F6		    loop ClearBuffer
 00000025  C6 86 000024E7 R	    mov InputString[ESI], 0
	   00
				
 0000002C  5E			    pop ESI
 0000002D  59			    pop ECX
 0000002E  C3			    ret
 0000002F			ClearForNewWord ENDP
				
				
				
				
				
				;/////////SETINFOLEVELS -> SETA OS PARANAUE PRO NÍVEL
 0000002F			SetInfoLevels PROC
				
 0000002F  C7 05 000024D1 R	    mov WordPosition, 0
	   00000000
 00000039  EB 0C		    jmp switch
 0000003B 00000053 R		  table DWORD case0, case1, case2 ;//to switch between levels
	   0000009D R
	   000000ED R
				
 00000047			switch:
 00000047  A1 000024C9 R	    mov EAX, Level
 0000004C  FF 24 85		    jmp table[4*EAX]
	   0000003B R
				
 00000053			case0:
				    INVOKE Str_copy,
				              ADDR fileLevel1,
				              ADDR fileName
 00000062  C7 05 00002499 R	    mov SizeLevel, 5
	   00000005
 0000006C  C7 05 0000249D R	    mov SizeWord, 4
	   00000004
 00000076  C7 05 000024CD R	    mov SizeOfFile, 656
	   00000290
 00000080  C7 05 00002489 R	    mov BytesToRead, 4
	   00000004
 0000008A  C6 05 000024F1 R	    mov NumOfWords, 3
	   03
 00000091  C6 05 000024F2 R	    mov CurrentNum, 0
	   00
 00000098  E9 000000A0		    jmp break
 0000009D			case1:
				    INVOKE Str_copy,
				              ADDR fileLevel2,
				              ADDR fileName
 000000AC  C7 05 00002499 R	    mov SizeLevel, 7
	   00000007
 000000B6  C7 05 0000249D R	    mov SizeWord, 6
	   00000006
 000000C0  C7 05 000024CD R	    mov SizeOfFile, 918
	   00000396
 000000CA  C7 05 00002489 R	    mov BytesToRead, 6
	   00000006
 000000D4  80 3D 000024F0 R	    cmp SpecialWord, 1
	   01
 000000DB  74 60		    je break
 000000DD  C6 05 000024F1 R	    mov NumOfWords, 2
	   02
 000000E4  C6 05 000024F2 R	    mov CurrentNum, 0
	   00
 000000EB  EB 50		    jmp break
 000000ED			case2:
				    INVOKE Str_copy,
				              ADDR fileLevel3,
				              ADDR fileName
 000000FC  C7 05 00002499 R	    mov SizeLevel, 8
	   00000008
 00000106  C7 05 0000249D R	    mov SizeWord, 7
	   00000007
 00000110  C7 05 000024CD R	    mov SizeOfFile, 1049
	   00000419
 0000011A  C7 05 00002489 R	    mov BytesToRead, 7
	   00000007
 00000124  80 3D 000024F0 R	    cmp SpecialWord, 1
	   01
 0000012B  74 10		    je break
 0000012D  C6 05 000024F1 R	    mov NumOfWords, 1
	   01
 00000134  C6 05 000024F2 R	    mov CurrentNum, 0
	   00
 0000013B  EB 00		    jmp break
 0000013D			break:
 0000013D  C3			  ret
 0000013E			SetInfoLevels ENDP
				
				
				
				;//Get a random number [0 - number of words] multiple of [size of word]
				;//to get the random words from .txt files (used to move the file pointer in 'RandNum' bytes)
 0000013E			GetRandomNumber PROC
 0000013E			randomizer:
 0000013E  E8 00000000 E	    call Delay
 00000143  E8 00000000 E	    call Randomize            ;//Sets seed
 00000148  A1 000024CD R	    mov EAX, SizeOfFile       ;//To get random number between [0 - SizeOfFile1]
 0000014D  E8 00000000 E	    call RandomRange          ;//EAX = random number
				
 00000152  8B 35 000024D1 R	    mov ESI, WordPosition     ;//To save words in different array positions
 00000158  89 86 000024A1 R	    mov RandNum[ESI], EAX
				
				    ;//BEGIN -  if((RandNum mod SizeLevel) != 0) then return to randomizer (get another number)
 0000015E  BA 00000000		    mov EDX, 0
 00000163  8B 0D 00002499 R	    mov ECX, SizeLevel
 00000169  F7 F1		    div ECX                    ;// important: EDX = 'Random Number Generated' MOD 'SizeLevel'
				
 0000016B  83 FA 00		    cmp EDX, 0
 0000016E  75 CE		    jne randomizer
				    ;//END if
				
				    ;//BEGIN IF(random number choosed before) then return to randomizer
 00000170  BB 00000000		    mov EBX, 0
 00000175  8B 86 000024A1 R	    mov EAX, RandNum[ESI]
 0000017B			NoEqualNumber:
 0000017B  3B 1D 000024D1 R	    cmp EBX, WordPosition
 00000181  74 08		    je  Skip
 00000183  3B 83 000024A1 R	    cmp EAX, RandNum[EBX]
 00000189  74 B3		    je  randomizer
 0000018B			Skip:
 0000018B  83 C3 04		    add EBX, 4
 0000018E  3B 1D 000024D1 R	    cmp EBX, WordPosition
 00000194  76 E5		    jbe  NoEqualNumber
				    ;//END IF
				
 00000196  C3			    ret
 00000197			GetRandomNumber ENDP
				
				
				
				;///////GETWORD PROC -> PEGA A PALAVRA DA VEZ
 00000197			GetWord PROC
 00000197  51			    push ECX
				    ;//To open file
 00000198  BA 00002475 R	    mov EDX, OFFSET fileName
 0000019D  E8 00000000 E	    call OpenInputFile
 000001A2  A3 00002485 R	    mov fileHandle, EAX
				
 000001A7  E8 FFFFFF92		    call GetRandomNumber ;//A random number is stored into RandNum
				
				
				    invoke SetFilePointer,    ;//Moves the file pointer of an open file.
				            fileHandle,       ;//File handle - DWORD
				            RandNum[ESI],            ;//Lower bytes of the number you want to move pointer to - SDWORD
				            NULL,             ;//Ptr to higher bytes of the same number - SDWORD
				            FILE_BEGIN        ;//Starting point } FILE_BEGIN -> beginning of file
				                                              ;//FILE_CURRENT -> current position
				                                              ;//FILE_END -> from current end-of-file
 000001C1  A1 00002485 R	    mov EAX, fileHandle
				
				    ;//Check if it was possible to read file
 000001C6  83 F8 FF		    cmp EAX,INVALID_HANDLE_VALUE      ;//error opening file?
 000001C9  75 0E		    jne file_is_ok
				    mWrite <"Cannot open file.",0dh,0ah>
 000024F3		     1		.data		
 000024F3 43 61 6E 6E 6F     1		??0000 BYTE "Cannot open file.",0dh,0ah,0	
	   74 20 6F 70 65
	   6E 20 66 69 6C
	   65 2E 0D 0A 00
 000001CB		     1		.code
 000001CB  52		     1		push	edx
 000001CC  BA 000024F3 R     1		mov	edx,OFFSET ??0000
 000001D1  E8 00000000 E     1		call	WriteString
 000001D6  5A		     1		pop	edx
 000001D7  EB 38		    jmp end_of_reading_files
				
				
				
 000001D9			file_is_ok:
				    ;//Read the file into a buffer
 000001D9  BA 0000248D R	    mov EDX,OFFSET buffer
 000001DE  8B 0D 00002489 R	    mov ECX,BytesToRead
				
 000001E4  E8 00000000 E	    call ReadFromFile
 000001E9  72 21		    jc   show_error_message   ;//If carry=1, then it shows the error message
 000001EB  A3 00002495 R	    mov  bytesRead, EAX       ;//BytesRead saves how many bytes were read into the buffer
				
				
				    ;//Display the buffer
 000001F0  BA 0000248D R	    mov EDX, OFFSET buffer
				
				    ;//Store generated word in RandWord
				    INVOKE Str_copy,
				             EDX,
				             ADDR RandWord
				
 00000200			close_file:
 00000200  A1 00002485 R	    mov EAX,fileHandle
 00000205  E8 00000000 E	    call CloseFile
 0000020A  EB 05		    jmp end_of_reading_files
				
 0000020C			show_error_message:
 0000020C  E8 00000000 E	    call WriteWindowsMsg
				
 00000211			end_of_reading_files:
 00000211  83 05 000024D1 R	    add WordPosition, 4
	   04
 00000218  59			    pop ECX
 00000219  C3			    ret
 0000021A			GetWord ENDP
				
				
				;/////////////GETTING A VECTOR OF RANDOM VALUES FOR LETTER POSITION
 0000021A			GetRandomScreenPosition PROC
 0000021A  51			  push ECX
				  ;//Generate random positions:
 0000021B  B9 00000000		  mov ECX, 0
 00000220  E8 00000000 E	  call Randomize            ;//Sets seed
 00000225			GetRandomPosition:
 00000225  E8 00000000 E	  call Delay
 0000022A  B8 00000032		  mov EAX, 50               ;//To get random number between [0 - screenLimit(65)]
 0000022F  E8 00000000 E	  call RandomRange          ;//EAX = random number
 00000234  83 C0 0F		  add EAX, 15               ;//EAX = [15 - 65]
				
 00000237  88 81 000024DD R	  mov RandomPosition[ECX], al
				
				  ;//If get a random number aready generated, it generates a new number:
 0000023D  BE 00000000		  mov ESI, 0
 00000242			CheckNumber:
 00000242  8A 9E 000024DD R	  mov bl, RandomPosition[ESI]
 00000248  3B F1		  cmp ESI, ECX
 0000024A  74 04		  je skip2
				
 0000024C  3A D8		  cmp bl, al
 0000024E  74 D5		  je GetRandomPosition
 00000250			  skip2:
 00000250  46			  inc ESI
 00000251  3B 35 0000249D R	  cmp ESI, SizeWord
 00000257  72 E9		  jb CheckNumber
				
 00000259  41			  inc ECX
 0000025A  3B 0D 0000249D R	  cmp ECX, SizeWord         ;//While ECX =! SizeWord+1, generates a new number
 00000260  72 C3		  jb GetRandomPosition
 00000262  59			  pop ECX
 00000263  C3			  ret
 00000264			GetRandomScreenPosition ENDP
				
				
				;/////////////////////////////////////////////////////////////////////////////////////////////////////
				
 00000264			PrintInfoPlayer PROC
 00000264  52			  push EDX
 00000265  50			  push EAX
 00000266  B8 0000000B		  mov EAX,lightCyan+(black*16)
 0000026B  E8 00000000 E	  call SetTextColor
				
 00000270  B2 11		  mov  DL, 17  ;column
 00000272  B6 16		  mov  DH, 22   ;row
 00000274  E8 00000000 E	  call Gotoxy
 00000279  0F B6 05		  movzx EAX, Score
	   000024EF R
 00000280  E8 00000000 E	  call WriteDec
				
 00000285  B2 2D		  mov  DL, 45  ;column
 00000287  B6 16		  mov  DH, 22   ;row
 00000289  E8 00000000 E	  call Gotoxy
 0000028E  A1 000024C9 R	  mov EAX, Level
 00000293  40			  inc EAX
 00000294  E8 00000000 E	  call WriteDec
				
 00000299  B2 44		  mov  DL, 68  ;column
 0000029B  B6 16		  mov  DH, 22   ;row
 0000029D  E8 00000000 E	  call Gotoxy
 000002A2  BA 000024E7 R	  mov EDX, OFFSET InputString
 000002A7  E8 00000000 E	  call WriteString
				
 000002AC  80 3D 000024F0 R	  cmp SpecialWord, 0
	   00
 000002B3  74 0A		  je EndInfo
 000002B5  B8 0000000D		  mov EAX,lightMagenta+(black*16)
 000002BA  E8 00000000 E	  call SetTextColor
 000002BF			EndInfo:
 000002BF  58			  pop EAX
 000002C0  5A			  pop EDX
 000002C1  C3			  ret
 000002C2			PrintInfoPlayer ENDP
				
				
				;//////PRINT THE WORD IN A LINE
 000002C2			PrintWordLine PROC
 000002C2  E8 000000C0		  call ReadKeyboard
 000002C7  80 3D 000024EE R	  cmp StatusWord, 0
	   00
 000002CE  77 4C		  ja StopPrinting2
				
 000002D0  FF 0D 0000249D R	  dec SizeWord
 000002D6  8B 35 0000249D R	  mov ESI, SizeWord
 000002DC  FF 05 0000249D R	  inc SizeWord
 000002E2  8B 0D 0000249D R	  mov ECX, SizeWord
				
 000002E8			PrintEachChar:
 000002E8  E8 0000009A		  call ReadKeyboard
 000002ED  8A 96 000024DD R	  mov  DL, RandomPosition[ESI]  ;column
 000002F3  8A F3		  mov  DH, BL                   ;row
 000002F5  0F B6 86		  movzx EAX, RandWord[ESI]
	   000024D5 R
 000002FC  E8 00000000 E	  call Gotoxy
 00000301  E8 00000000 E	  call WriteChar
				
 00000306  E8 0000007C		  call ReadKeyboard
 0000030B  B2 44		  mov  DL, 68  ;column
 0000030D  B6 16		  mov  DH, 22   ;row
 0000030F  E8 00000000 E	  call Gotoxy
				
 00000314  E8 0000006E		  call ReadKeyboard
 00000319  4E			  dec ESI
 0000031A  E2 CC		  loop PrintEachChar
 0000031C			StopPrinting2:
 0000031C  C3			  ret
 0000031D			PrintWordLine ENDP
				
				
				;////Makes word move downwards
 0000031D			PrintWordMoving PROC
 0000031D  51			  push ECX
 0000031E  BB 00000001		  mov EBX, 1
 00000323			NextLine:
 00000323  80 3D 000024EE R	  cmp StatusWord, 0
	   00
 0000032A  77 59		  ja StopPrinting
 0000032C  E8 FFFFFF91		  call PrintWordLine
 00000331  43			  inc EBX
 00000332  E8 FFFFFF8B		  call PrintWordLine
				
 00000337  E8 FFFFFF28		  call PrintInfoPlayer
 0000033C  4B			  dec EBX
 0000033D  B8 00000000		  mov EAX,black+(black*16)
 00000342  E8 00000000 E	  call SetTextColor
 00000347  E8 FFFFFF76		  call PrintWordLine
				
 0000034C  80 3D 000024EE R	  cmp StatusWord, 0
	   00
 00000353  77 30		  ja StopPrinting
 00000355  B8 0000041A		  mov EAX, 1050
 0000035A  E8 00000000 E	  call Delay
				
 0000035F  43			  inc EBX
 00000360  B8 0000000B		  mov  EAX,lightCyan+(black*16)
 00000365  E8 00000000 E	  call SetTextColor
				
 0000036A  80 3D 000024F0 R	  cmp SpecialWord, 0
	   00
 00000371  74 0A		  je NotSpecialColor
 00000373  B8 0000000D		  mov EAX,lightMagenta+(black*16)
 00000378  E8 00000000 E	  call SetTextColor
 0000037D			NotSpecialColor:
 0000037D  3A 1D 000024E5 R	  cmp BL, ScreenLimit
 00000383  72 9E		  jb NextLine
 00000385			StopPrinting:
 00000385  59			  pop ECX
 00000386  C3			  ret
 00000387			PrintWordMoving ENDP
				
				
 00000387			ReadKeyboard PROC
 00000387  50			  push EAX
 00000388  53			  push EBX
 00000389  E8 00000000 E	  call ReadKey
 0000038E  74 0A		  jz DidntPressed
 00000390  A2 000024E6 R	  mov  InputPlayer,al
 00000395  E8 0000002F		  call VerifyLetter
 0000039A			DidntPressed:
 0000039A  5B			  pop EBX
 0000039B  58			  pop EAX
 0000039C  C3			  ret
 0000039D			ReadKeyboard ENDP
				
				
				;/////Add Score
 0000039D			AddScore PROC
 0000039D  83 3D 000024C9 R	  cmp Level, 1
	   01
 000003A4  74 12		  je AddScore1
 000003A6  83 3D 000024C9 R	  cmp Level, 2
	   02
 000003AD  74 12		  je AddScore2
 000003AF  80 05 000024EF R	  add Score, 5
	   05
 000003B6  EB 10		  jmp EndAddScore
 000003B8			AddScore1:
 000003B8  80 05 000024EF R	  add Score, 10
	   0A
 000003BF  EB 07		  jmp EndAddScore
 000003C1			AddScore2:
 000003C1  80 05 000024EF R	  add Score, 20
	   14
 000003C8			EndAddScore:
 000003C8  C3			  ret
 000003C9			AddScore ENDP
				
				
 000003C9			VerifyLetter PROC
 000003C9  52			  push EDX
 000003CA  53			  push EBX
 000003CB  56			  push ESI
 000003CC  50			  push EAX
 000003CD  0F B6 35		  movzx ESI, LetterPlayer
	   000024ED R
 000003D4  0F B6 05		  movzx eax, InputPlayer
	   000024E6 R
 000003DB  3A 86 000024D5 R	  cmp al, RandWord[ESI]       ;//Compare if typed letter = next letter
 000003E1  74 09		  je LetterCorrect            ;// If it is, then jump to Letter Corret; otherwise, Word's status = 2, and jump to EndRead
				
 000003E3  C6 05 000024EE R	  mov StatusWord, 2
	   02
 000003EA  EB 23		  jmp EndRead
 000003EC			LetterCorrect:                ;//LetterCorrect will insert it in InputString, add score, increment LetterPlayer,
 000003EC  88 86 000024E7 R	  mov InputString[ESI], al             ;// and check if the player guessed the whole word;
				                                       ;// If yes, then Jump to FinishedWord; If not, then jump to EndRead
 000003F2  E8 FFFFFFA6		  call AddScore               ;//Adding Score
				
 000003F7  FE 05 000024ED R	  inc LetterPlayer
 000003FD  46			  inc ESI
 000003FE  3B 35 0000249D R	  cmp ESI, SizeWord
 00000404  74 02		  je FinishedWord
 00000406  EB 07		  jmp EndRead
 00000408			FinishedWord:                 ;//When a word is finished, its status changes to 1
 00000408  C6 05 000024EE R	  mov StatusWord, 1
	   01
				
 0000040F			EndRead:
 0000040F  58			  pop EAX
 00000410  5E			  pop ESI
 00000411  5B			  pop EBX
 00000412  5A			  pop EDX
 00000413  C3			  ret
 00000414			VerifyLetter ENDP
				
				;//////////PRITRESULTWORD -> PRINTA O RESULTADO DA PALAVRA
 00000414			PrintResultWord PROC
 00000414  51			  push ECX
 00000415  50			  push EAX
 00000416  52			  push EDX
				  ;//call ClrScr
 00000417  B8 0000000B		  mov  EAX,lightCyan+(black*16)
 0000041C  E8 00000000 E	  call SetTextColor
				
 00000421  0F B6 05		  movzx EAX, StatusWord
	   000024EE R
 00000428  83 F8 01		  cmp EAX, 1
 0000042B  75 11		  jne WrongLetter
				
 0000042D  E8 00000000 E	  call ClrScr
 00000432  BA 00001593 R	  mov EDX, OFFSET Correct
 00000437  E8 00000000 E	  call WriteString
 0000043C  EB 7F		  jmp EndPrintResultWord
				
 0000043E			WrongLetter:
 0000043E  80 3D 000024F0 R	  cmp SpecialWord, 1
	   01
 00000445  74 4D		  je SpecialWordFail
				
 00000447  E8 00000000 E	  call ClrScr
 0000044C  BA 00000E62 R	  mov EDX, OFFSET Fail
 00000451  E8 00000000 E	  call WriteString
				  ;//Write Score
 00000456  B2 2A		  mov  DL, 42  ;column
 00000458  B6 0B		  mov  DH, 11   ;row
 0000045A  E8 00000000 E	  call Gotoxy
 0000045F  0F B6 05		  movzx EAX, Score
	   000024EF R
				  ;//Write Level
 00000466  E8 00000000 E	  call WriteDec
 0000046B  B2 31		  mov  DL, 49  ;column
 0000046D  B6 0C		  mov  DH, 12   ;row
 0000046F  E8 00000000 E	  call Gotoxy
 00000474  A1 000024C9 R	  mov EAX, Level
 00000479  40			  inc EAX
 0000047A  E8 00000000 E	  call WriteDec
				  ;//Print Word
 0000047F  B2 2C		  mov  DL, 44  ;column
 00000481  B6 0D		  mov  DH, 13   ;row
 00000483  E8 00000000 E	  call Gotoxy
 00000488  BA 000024D5 R	  mov EDX, OFFSET RandWord
 0000048D  E8 00000000 E	  call WriteString
 00000492  EB 29		  jmp EndPrintResultWord
				
 00000494			SpecialWordFail:
 00000494  E8 00000000 E	  call ClrScr
 00000499  BA 00000731 R	  mov EDX, OFFSET FailSpecial
 0000049E  E8 00000000 E	  call WriteString
 000004A3  B2 2A		  mov  DL, 42  ;column
 000004A5  B6 14		  mov  DH, 20   ;row
 000004A7  E8 00000000 E	  call Gotoxy
 000004AC  BA 000024D5 R	  mov EDX, OFFSET RandWord
 000004B1  E8 00000000 E	  call WriteString
 000004B6  C6 05 000024EE R	  mov StatusWord, 1
	   01
				
 000004BD			EndPrintResultWord:
 000004BD  B2 01		  mov  DL, 1  ;column
 000004BF  B6 18		  mov  DH, 24   ;row
 000004C1  E8 00000000 E	  call Gotoxy
 000004C6  5A			  pop EDX
 000004C7  58			  pop EAX
 000004C8  59			  pop ECX
 000004C9  C3			  ret
 000004CA			PrintResultWord ENDP
				
				
				;//////////PrintGameLevel PROC -> PRINTA O JOGO ATIVO
 000004CA			PrintGameLevel PROC
 000004CA  B8 0000000B		  mov  EAX,lightCyan+(black*16)
 000004CF  E8 00000000 E	  call SetTextColor
				
 000004D4  0F B6 0D		  movzx ECX, NumOfWords
	   000024F1 R
 000004DB  83 E9 02		  sub ECX, 2
 000004DE			LevelOne:
 000004DE  E8 FFFFFCB4		  call GetWord
 000004E3  BA 00001CC4 R	  mov EDX, OFFSET ScreenGame
 000004E8  E8 00000000 E	  call WriteString
 000004ED  E8 FFFFFD28		  call GetRandomScreenPosition
 000004F2  E8 FFFFFE26		  call PrintWordMoving
 000004F7  E8 FFFFFF18		  call PrintResultWord
				
 000004FC  B8 000007D0		  mov EAX, 2000
 00000501  E8 00000000 E	  call Delay
				
 00000506  80 3D 000024EE R	  cmp StatusWord, 2
	   02
 0000050D  0F 84 00000094	  je EndLevel
 00000513  E8 FFFFFAE8		  call ClearForNewWord
 00000518  E2 C4		  loop LevelOne
				
 0000051A  C6 05 000024F0 R	  mov SpecialWord, 1
	   01
 00000521  FF 05 000024C9 R	  inc Level
 00000527  E8 FFFFFB03		  call SetInfoLevels
 0000052C  E8 FFFFFC66		  call GetWord
 00000531  E8 00000000 E	  call ClrScr
 00000536  BA 00001CC4 R	  mov EDX, OFFSET ScreenGame
 0000053B  E8 00000000 E	  call WriteString
				
 00000540  E8 FFFFFCD5		  call GetRandomScreenPosition
				
 00000545  B8 0000000D		  mov EAX,lightMagenta+(black*16)
 0000054A  E8 00000000 E	  call SetTextColor
				
 0000054F  E8 FFFFFDC9		  call PrintWordMoving
				
 00000554  B8 0000000B		  mov EAX,lightCyan+(black*16)
 00000559  E8 00000000 E	  call SetTextColor
				
 0000055E  E8 FFFFFEB1		  call PrintResultWord
				
 00000563  B8 000007D0		  mov EAX, 2000
 00000568  E8 00000000 E	  call Delay
				
 0000056D  FF 0D 000024C9 R	  dec Level
 00000573  E8 FFFFFAB7		  call SetInfoLevels
 00000578  C6 05 000024F0 R	  mov SpecialWord, 0
	   00
 0000057F  E8 FFFFFC13		  call GetWord
 00000584  BA 00001CC4 R	  mov EDX, OFFSET ScreenGame
 00000589  E8 00000000 E	  call WriteString
 0000058E  E8 FFFFFBAB		  call GetRandomNumber
 00000593  E8 FFFFFD85		  call PrintWordMoving
 00000598  E8 FFFFFE77		  call PrintResultWord
				
 0000059D  B8 000007D0		  mov EAX, 2000
 000005A2  E8 00000000 E	  call Delay
				
				
				
 000005A7			EndLevel:
				  ;mov  dl, 1  ;column
				  ;mov  dh,24  ;row
				  ;call Gotoxy
				
 000005A7  C3			  ret
 000005A8			PrintGameLevel ENDP
				
				
				
				;////////GAME PROC -> CHAMA AS FUNÇÕES
 000005A8			Game PROC
 000005A8  E8 FFFFFA82		    call SetInfoLevels
 000005AD  E8 FFFFFF18		    call PrintGameLevel
				
 000005B2  80 3D 000024EE R	    cmp StatusWord, 2
	   02
 000005B9  74 4A		    je EndGame
				
 000005BB  FF 05 000024C9 R	    inc Level
 000005C1  E8 FFFFFA69		    call SetInfoLevels
				
 000005C6  E8 00000000 E	    call ClrScr
 000005CB  BA 00000000 R	    mov EDX, OFFSET NextLevel
 000005D0  E8 00000000 E	    call WriteString
 000005D5  B2 2A		    mov  dl, 42 ;column
 000005D7  B6 0A		    mov  dh, 10  ;row
 000005D9  E8 00000000 E	    call Gotoxy
 000005DE  B8 00000002		    mov EAX, 2
 000005E3  E8 00000000 E	    call WriteDec
 000005E8  B2 01		    mov  dl, 1 ;column
 000005EA  B6 18		    mov  dh, 24  ;row
 000005EC  E8 00000000 E	    call Gotoxy
				
 000005F1  B8 000007D0		    mov EAX, 2000
 000005F6  E8 00000000 E	    call Delay
				
 000005FB  E8 00000000 E	    call ClrScr
 00000600  E8 FFFFFEC5		    call PrintGameLevel
				
 00000605			EndGame:
				
 00000605  C3			    ret
 00000606			Game ENDP
				
				
				
				
				
				
				;///////////MAIN -> CHAMA GAME PROC
 00000606			main PROC
 00000606  E8 FFFFFF9D		    call Game
				    ;call CRLF
				
				
				
				    ;call CRLF
 0000060B  E8 00000000 E	    call WaitMsg
				    exit
 00000617			main ENDP
				END main
Microsoft (R) Macro Assembler Version 12.00.21005.1	    12/01/18 19:05:34
JOGO_versao1.asm					     Symbols 2 - 1




Macros:

                N a m e                 Type

IsDefined  . . . . . . . . . . .	Func
Startup  . . . . . . . . . . . .	Proc
mDumpMem . . . . . . . . . . . .	Proc
mDump  . . . . . . . . . . . . .	Proc
mGotoxy  . . . . . . . . . . . .	Proc
mReadString  . . . . . . . . . .	Proc
mShowRegister  . . . . . . . . .	Proc
mShow  . . . . . . . . . . . . .	Proc
mWriteLn . . . . . . . . . . . .	Proc
mWriteSpace  . . . . . . . . . .	Proc
mWriteString . . . . . . . . . .	Proc
mWrite . . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00002507 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000617 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

AddScore . . . . . . . . . . . .	P Near	 0000039D _TEXT	Length= 0000002C Public STDCALL
  AddScore1  . . . . . . . . . .	L Near	 000003B8 _TEXT	
  AddScore2  . . . . . . . . . .	L Near	 000003C1 _TEXT	
  EndAddScore  . . . . . . . . .	L Near	 000003C8 _TEXT	
ClearForNewWord  . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000002F Public STDCALL
  ClearBuffer  . . . . . . . . .	L Near	 0000001B _TEXT	
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Game . . . . . . . . . . . . . .	P Near	 000005A8 _TEXT	Length= 0000005E Public STDCALL
  EndGame  . . . . . . . . . . .	L Near	 00000605 _TEXT	
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetRandomNumber  . . . . . . . .	P Near	 0000013E _TEXT	Length= 00000059 Public STDCALL
  randomizer . . . . . . . . . .	L Near	 0000013E _TEXT	
  NoEqualNumber  . . . . . . . .	L Near	 0000017B _TEXT	
  Skip . . . . . . . . . . . . .	L Near	 0000018B _TEXT	
GetRandomScreenPosition  . . . .	P Near	 0000021A _TEXT	Length= 0000004A Public STDCALL
  GetRandomPosition  . . . . . .	L Near	 00000225 _TEXT	
  CheckNumber  . . . . . . . . .	L Near	 00000242 _TEXT	
  skip2  . . . . . . . . . . . .	L Near	 00000250 _TEXT	
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetWord  . . . . . . . . . . . .	P Near	 00000197 _TEXT	Length= 00000083 Public STDCALL
  file_is_ok . . . . . . . . . .	L Near	 000001D9 _TEXT	
  close_file . . . . . . . . . .	L Near	 00000200 _TEXT	
  show_error_message . . . . . .	L Near	 0000020C _TEXT	
  end_of_reading_files . . . . .	L Near	 00000211 _TEXT	
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PrintGameLevel . . . . . . . . .	P Near	 000004CA _TEXT	Length= 000000DE Public STDCALL
  LevelOne . . . . . . . . . . .	L Near	 000004DE _TEXT	
  EndLevel . . . . . . . . . . .	L Near	 000005A7 _TEXT	
PrintInfoPlayer  . . . . . . . .	P Near	 00000264 _TEXT	Length= 0000005E Public STDCALL
  EndInfo  . . . . . . . . . . .	L Near	 000002BF _TEXT	
PrintResultWord  . . . . . . . .	P Near	 00000414 _TEXT	Length= 000000B6 Public STDCALL
  WrongLetter  . . . . . . . . .	L Near	 0000043E _TEXT	
  SpecialWordFail  . . . . . . .	L Near	 00000494 _TEXT	
  EndPrintResultWord . . . . . .	L Near	 000004BD _TEXT	
PrintWordLine  . . . . . . . . .	P Near	 000002C2 _TEXT	Length= 0000005B Public STDCALL
  PrintEachChar  . . . . . . . .	L Near	 000002E8 _TEXT	
  StopPrinting2  . . . . . . . .	L Near	 0000031C _TEXT	
PrintWordMoving  . . . . . . . .	P Near	 0000031D _TEXT	Length= 0000006A Public STDCALL
  NextLine . . . . . . . . . . .	L Near	 00000323 _TEXT	
  NotSpecialColor  . . . . . . .	L Near	 0000037D _TEXT	
  StopPrinting . . . . . . . . .	L Near	 00000385 _TEXT	
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyboard . . . . . . . . . .	P Near	 00000387 _TEXT	Length= 00000016 Public STDCALL
  DidntPressed . . . . . . . . .	L Near	 0000039A _TEXT	
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetInfoLevels  . . . . . . . . .	P Near	 0000002F _TEXT	Length= 0000010F Public STDCALL
  switch . . . . . . . . . . . .	L Near	 00000047 _TEXT	
  case0  . . . . . . . . . . . .	L Near	 00000053 _TEXT	
  case1  . . . . . . . . . . . .	L Near	 0000009D _TEXT	
  case2  . . . . . . . . . . . .	L Near	 000000ED _TEXT	
  break  . . . . . . . . . . . .	L Near	 0000013D _TEXT	
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
VerifyLetter . . . . . . . . . .	P Near	 000003C9 _TEXT	Length= 0000004B Public STDCALL
  LetterCorrect  . . . . . . . .	L Near	 000003EC _TEXT	
  FinishedWord . . . . . . . . .	L Near	 00000408 _TEXT	
  EndRead  . . . . . . . . . . .	L Near	 0000040F _TEXT	
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000606 _TEXT	Length= 00000011 Public STDCALL
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

??0000 . . . . . . . . . . . . .	Byte	 000024F3 _DATA	
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
BUFSIZE  . . . . . . . . . . . .	Number	 00000008h   
BytesToRead  . . . . . . . . . .	DWord	 00002489 _DATA	
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
Correct  . . . . . . . . . . . .	Byte	 00001593 _DATA	
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
CurrentNum . . . . . . . . . . .	Byte	 000024F2 _DATA	
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FailSpecial  . . . . . . . . . .	Byte	 00000731 _DATA	
Fail . . . . . . . . . . . . . .	Byte	 00000E62 _DATA	
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
InputPlayer  . . . . . . . . . .	Byte	 000024E6 _DATA	
InputString  . . . . . . . . . .	Byte	 000024E7 _DATA	
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
LetterPlayer . . . . . . . . . .	Byte	 000024ED _DATA	
Level  . . . . . . . . . . . . .	DWord	 000024C9 _DATA	
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
NextLevel  . . . . . . . . . . .	Byte	 00000000 _DATA	
NumOfWords . . . . . . . . . . .	Byte	 000024F1 _DATA	
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
RandNum  . . . . . . . . . . . .	DWord	 000024A1 _DATA	
RandWord . . . . . . . . . . . .	Byte	 000024D5 _DATA	
RandomPosition . . . . . . . . .	Byte	 000024DD _DATA	
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
Score  . . . . . . . . . . . . .	Byte	 000024EF _DATA	
ScreenGame . . . . . . . . . . .	Byte	 00001CC4 _DATA	
ScreenLimit  . . . . . . . . . .	Byte	 000024E5 _DATA	
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
SizeLevel  . . . . . . . . . . .	DWord	 00002499 _DATA	
SizeOfFile . . . . . . . . . . .	DWord	 000024CD _DATA	
SizeWord . . . . . . . . . . . .	DWord	 0000249D _DATA	
SpecialWord  . . . . . . . . . .	Byte	 000024F0 _DATA	
StatusWord . . . . . . . . . . .	Byte	 000024EE _DATA	
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WordPosition . . . . . . . . . .	DWord	 000024D1 _DATA	
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
buffer . . . . . . . . . . . . .	Byte	 0000248D _DATA	
bytesRead  . . . . . . . . . . .	DWord	 00002495 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
fileHandle . . . . . . . . . . .	DWord	 00002485 _DATA	
fileLevel1 . . . . . . . . . . .	Byte	 00002445 _DATA	
fileLevel2 . . . . . . . . . . .	Byte	 00002455 _DATA	
fileLevel3 . . . . . . . . . . .	Byte	 00002465 _DATA	
fileName . . . . . . . . . . . .	Byte	 00002475 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
red  . . . . . . . . . . . . . .	Number	 00000004h   
table  . . . . . . . . . . . . .	DWord	 0000003B _TEXT	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
